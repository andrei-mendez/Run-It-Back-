/* ============================
   style.css — Full replacement
   — fixes label overlap, circle positions, and page centering
   ============================ */

/* Reset */
* { box-sizing: border-box; margin: 0; padding: 0; }

/* Root vars — tune these if you want bigger/smaller circles or spacing */
:root{
  --circle-size-desktop: 48px;
  --gap-desktop: 16px;
  --circle-size-mobile: 42px;
  --gap-mobile: 12px;
}

/* Base page settings */
html, body {
  width: 100%;
  height: 100%;
  font-family: Arial, sans-serif;
  color: #f5f5f5;            /* white text everywhere */
  text-align: center;
  overflow-x: hidden;        /* no horizontal scrolling */
  background-color: #121212; /* fallback */
}

/* Background image (no `fixed` — works reliably on iPhone) */
body {
  background: url("images/scenic.png") no-repeat center center;
  background-size: cover;
  min-height: 100vh;
  position: relative;
}

/* Dark overlay behind content (keeps text readable) */
body::before {
  content: "";
  position: fixed;
  inset: 0;
  background: rgba(18,18,18,0.75);
  z-index: 0;                /* behind content */
  pointer-events: none;
}

/* Make sure main content sits above the overlay */
section, .timeline-container, .centered-page,
.full-centered, .reflection-page, .final-page,
.timeline, .modal {
  position: relative;
  z-index: 1;
}

/* Force headings/paragraphs/buttons white */
h1,h2,h3,h4,h5,h6,p,button,span,li { color: #f5f5f5 !important; }

/* ----------------------------
   First page: keep unchanged (full-screen centered)
   ---------------------------- */
.centered-page {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  min-height: 100vh;
  height: 100vh;
  overflow: hidden; /* prevent whole-page scroll on mobile */
  padding: 20px;
}
.centered-page h1 { font-size: 2.8rem; line-height: 1.05; margin-bottom: 18px; }

/* ----------------------------
   Reflection & Final pages (center content vertically + horizontally)
   Usage: add class "reflection-page" or "final-page" to the <body> or a root <section>.
   ---------------------------- */
.reflection-page,
.final-page {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 20px;
}

/* When you want to center just a block inside the page, place it in .full-centered */
.full-centered {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 20px;
}

/* ----------------------------
   Buttons
   ---------------------------- */
button {
  background-color: rgba(30,30,30,0.95);
  color: #f5f5f5;
  border: 2px solid rgba(255,255,255,0.08);
  padding: 12px 20px;
  margin: 8px;
  border-radius: 10px;
  font-size: 18px;
  cursor: pointer;
}

/* ----------------------------
   TIMELINE
   - timeline scrolls internally on mobile (page not scrolled)
   ---------------------------- */

/* Wrapper so we can space title and timeline area */
.timeline-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  min-height: 100vh;
  padding: 20px;
}

.timeline-container h2 {
  margin-top: 28px;
  margin-bottom: 48px; /* extra space between title and timeline */
  font-size: 2rem;
  z-index: 1;
}

/* Scrollable timeline area (only this area scrolls if long) */
.timeline {
  position: relative;
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
  padding: 10px 0;
  z-index: 1;
  /* Give it a max-height so it can scroll independently on small screens */
  max-height: calc(100vh - 170px); /* tuned to leave room for title + padding */
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

/* vertical center line (brighter for visibility) */
.timeline::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 3px;
  background: rgba(245,245,245,0.75);
  z-index: 1;
}

/* timeline row */
.timeline-item {
  position: relative;
  width: 100%;
  padding: 56px 12px;  /* vertical spacing between circles */
  min-height: 80px;
}

/* --- circle position logic:
   use CSS variables that change at a mobile breakpoint.
   offset is calculated from circle radius plus a gap so labels never overlap.
*/
.timeline-item .circle,
.timeline-item > img.thumb {
  --circle-size: var(--circle-size-desktop);
  width: var(--circle-size);
  aspect-ratio: 1/1;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
  border-radius: 50%;
  overflow: hidden;
  border: 3px solid rgba(245,245,245,0.95);
  background: #333;
  z-index: 3;
  cursor: pointer;
}
.timeline-item .circle img,
.timeline-item > img.thumb {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* label placement: compute an offset so label sits outside the circle edge
   offset = (circle_size / 2) + gap  */
.timeline-item .content {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  font-size: 16px;
  color: #f5f5f5;
  max-width: calc(50% - 32px);
  line-height: 1.2;
  z-index: 2;
  background: none;
}

/* Desktop: compute offset using desktop vars */
:root {
  --circle-size-desktop: 48px;
  --gap-desktop: 16px;
  --offset-desktop: calc((var(--circle-size-desktop) / 2) + var(--gap-desktop));
}

/* Left/right labels use calc relative to center line so they never overlap the circle */
.timeline-item.left  .content { right: calc(50% + var(--offset-desktop)); text-align: right; }
.timeline-item.right .content { left:  calc(50% + var(--offset-desktop)); text-align: left; }

/* MOBILE adjustments — change circle size and gap, but keep same math */
@media (max-width: 768px) {
  :root {
    --circle-size-desktop: 42px; /* effectively the var used above */
    --gap-desktop: 12px;
    --offset-desktop: calc((var(--circle-size-desktop) / 2) + var(--gap-desktop));
  }

  /* make timeline area slightly taller on mobile to help layout */
  .timeline { max-height: calc(100vh - 150px); }

  /* keep circle centered vertically */
  .timeline-item .circle,
  .timeline-item > img.thumb {
    width: var(--circle-size-desktop);
    /* top remains 50% so it's vertically centered in the row */
  }

  /* On mobile, still position labels outside the circle using calc relative to center.
     This prevents labels from starting inside the circle. */
  .timeline-item.left  .content { right: calc(50% + var(--offset-desktop)); text-align: right; max-width: 46%; }
  .timeline-item.right .content { left:  calc(50% + var(--offset-desktop)); text-align: left;  max-width: 46%; }

  /* decrease vertical spacing a bit on smaller screens */
  .timeline-item { padding: 44px 8px; min-height: 64px; }
}

/* very small phones */
@media (max-width: 420px) {
  :root { --circle-size-desktop: 40px; --gap-desktop: 10px; --offset-desktop: calc((var(--circle-size-desktop) / 2) + var(--gap-desktop)); }
  .timeline { max-height: calc(100vh - 120px); }
  .timeline-item { padding: 36px 6px; min-height: 56px; }
  .timeline-item .content { font-size: 14px; max-width: 48%; }
}

/* Modal */
.modal {
  display: none;
  position: fixed;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(0,0,0,0.6);
  z-index: 9999;
  padding: 20px;
}
.modal .modal-content {
  width: 100%;
  max-width: 560px;
  background: #0f0f0f;
  border-radius: 12px;
  padding: 16px;
  color: #f5f5f5;
  position: relative;
}
.modal .modal-content img { width: 100%; height: auto; border-radius: 8px; margin: 12px 0; }
.modal .close { position: absolute; top: 10px; right: 12px; font-size: 20px; cursor: pointer; }

/* small utility to ensure titles are white */
h1,h2 { color: #f5f5f5 !important; }
